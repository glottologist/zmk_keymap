/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
  };

  combos {
    compatible = "zmk,combos";
  };

  macros {
  };
 conditional_layers {
        compatible = "zmk,conditional-layers";
        both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
         &kp ESC  &kp Q  &kp W     &kp E  &kp R       &kp T        &kp Y  &kp U         &kp I    &kp O      &kp P  &kp BACKSPACE
  &kp LEFT_SHIFT  &kp A  &kp S     &kp D  &kp F       &kp G        &kp H  &kp J         &kp K    &kp L  &kp COLON       &kp HASH
&kp LEFT_CONTROL  &kp Z  &kp X     &kp C  &kp V       &kp B        &kp N  &kp M     &kp COMMA  &kp DOT   &kp FSLH         &kp AT
                                &kp LGUI  &mo 1  &kp RETURN    &kp SPACE  &mo 2  &kp LEFT_ALT
      >;

      label = "Base";
    };

    raise {
      bindings = <
     &kp TAB           &kp N1           &kp N2           &kp N3                &kp N4                 &kp N5            &kp N6     &kp N7            &kp N8             &kp N9     &kp N0         &kp DELETE
   &kp GRAVE  &kp EXCLAMATION  &kp NON_US_HASH        &kp POUND            &kp DOLLAR            &kp PERCENT         &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp TILDE  &kp LS(BACKSLASH)
&kp CAPSLOCK        &kp CARET    &kp AMPERSAND  &kp KP_MULTIPLY  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp UNDERSCORE   &kp PLUS    &kp LEFT_BRACE    &kp RIGHT_BRACE   &kp PIPE      &kp LS(SLASH)
                                                   &kp LEFT_GUI                &trans             &kp RETURN         &kp SPACE      &mo 3      &kp LEFT_ALT
      >;
    };

    lower {
      bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3      &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_NXT        &trans        &trans        &trans         &trans            &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_PRV        &trans        &trans        &trans  &kp LESS_THAN  &kp GREATER_THAN    &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans          &mo 3            &trans    &trans  &trans  &trans
      >;
    };

    both {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
      >;
    };
  };
};
